# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# remap prefix to Control + a
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Use Vim key bindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-selection

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-selection

# No Esc key delay
set -s escape-time 0

# Mouse support - set to on if you want to use the mouse
set -g mouse on

# Set the default terminal mode to 256color mode
set -g default-terminal "screen-256color"

# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

# Center the window list
set -g status-justify centre

# Start windows and panes at 1, not 0
setw -g base-index 1
setw -g pane-base-index 1

# Highlight current pane
set-option -g pane-active-border-bg blue

# Open a new window, prompt for a hostname, and ssh to it
bind-key S command-prompt -p ssh: "new-window -n %1 'ssh %1'"

# Pair program, but don't shrink my window if you're not paying attention!
setw -g aggressive-resize on

if-shell "type 'reattach-to-user-namespace' >/dev/null" "source ~/.tmux-osx.conf"
